MyBatis一级缓存
    一级缓存是SqlSession级别的，通过同一个SqlSession查询的数据会被缓存，下次查询相同的数据，就
    会从缓存中直接获取，不会从数据库重新访问。
    17021438一级缓存17021438
    17021438一级缓存17021438新的缓存17672517
    使一级缓存失效的四种情况：
    1) 不同的SqlSession对应不同的一级缓存
    2) 同一个SqlSession但是查询条件不同
    3) 同一个SqlSession两次查询期间执行了任何一次增删改操作
    4) 同一个SqlSession两次查询期间手动清空了缓存(sqlSession.clearCache())
MyBatis的二级缓存
    二级缓存是SqlSessionFactory级别，通过同一个SqlSessionFactory创建的SqlSession查询的结果会被
    缓存；此后若再次执行相同的查询语句，结果就会从缓存中获取。
    二级缓存开启的条件：
    a>在核心配置文件中，设置全局配置属性cacheEnabled="true"，默认为true，不需要设置
    b>在映射文件XXXMapper.xml中设置标签<cache/>
    c>二级缓存必须在SqlSession关闭或提交之后有效
    d>查询的数据所转换的实体类类型必须实现序列化的接口
    使二级缓存失效的情况：
    两次查询之间执行了任意的增删改，会使一级和二级缓存同时失效
    二级缓存的相关配置
    ④readOnly属性：只读， true/false
    true：只读缓存；会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这提供了很重要的性能优势。
    false：读写缓存；会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全，因此默认是false。

MyBatis缓存查询的顺序(二级缓存 > 一级缓存 > 数据库)
    先查询二级缓存，因为二级缓存中可能会有其他程序已经查出来的数据，可以拿来直接使用。
    如果二级缓存没有命中，再查询一级缓存
    如果一级缓存也没有命中，则查询数据库
    SqlSession关闭之后，一级缓存中的数据会写入二级缓存
MyBatis缓存查询的顺序
整合第三方缓存EHCache(针对于二级缓存了解)


