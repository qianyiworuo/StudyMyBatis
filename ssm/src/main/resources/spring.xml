<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
<!--扫描组件，除Controller层-->
    <context:component-scan base-package="com.wd.ssm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
<!--引入jdbc.properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
<!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
<!--开启事务驱动，使用@Transactional标识的方法或类中的所有方法进行事务管理-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
<!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
<!--配置sqlSessionFactoryBean，可以直接在spring的ioc容器中直接获取SqlSessionFactoryBean-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
    <!--设置MyBatis核心配置文件的路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    <!--设置数据源-->
        <property name="dataSource" ref="dataSource"/>
    <!--设置类型别名所对应的包-->
        <property name="typeAliasesPackage" value="com.wd.ssm.pojo"/>
        <!--
            设置映射文件的路径
            若映射文件所在路径和mapper接口所在路径一致，则不需要设置
        -->
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
    </bean>
    <!--
        配置mapper接口的扫描配置
       由mybatis-spring提供，可以将指定包下所有的mapper接口创建动态代理
       并将这些动态代理作为IOC容器的bean管理
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wd.ssm.mapper"/>
    </bean>
</beans>