IOC创建对象的方式
    注意：
    Spring 底层默认通过反射技术调用组件类的无参构造器来创建组件对象，这一点需要注意。如果在需要
    无参构造器时，没有无参构造器，则会抛出下面的异常：org.springframework.beans.factory.BeanCreationException

    ApplicationContext ioc = new ClassPathXmlApplicationContext("applicationContext.xml");
    方式一
    根据Bean的id获取
    Student student = (Student) ioc.getBean("studentOne");
    方式二
    根据Bean的类型获取(必须满足IOC容器中有且只有一个Bean)常用
    Student student ioc.getBean(Student.class);
    方式三
    Bean的id和类型获取
    Student student = ioc.getBean("studentOne", Student.class);
    如果组件类实现了接口，根据接口类型可以获取 bean 吗？
    可以，前提是bean唯一
    如果一个接口有多个实现类，这些实现类都配置了 bean，根据接口类型可以获取 bean 吗？
    不行，因为bean不唯一
    结论：
    根据类型来获取bean时，在满足bean唯一性的前提下，其实只是看：『对象 instanceof 指定的类
    型』的返回结果，只要返回的是true就可以认定为和类型匹配，能够获取到。
DI依赖注入(为Bean类属性赋值)
    Setter注入
    <bean id="studentOne" class="com.atguigu.spring.bean.Student">
    <!-- property标签：通过组件类的setXxx()方法给组件对象设置属性 -->
    <!-- name属性：指定属性名（这个属性名是getXxx()、setXxx()方法定义的，和成员变量无关）
    -->
    <!-- value属性：指定属性值 -->
    <property name="id" value="1001"></property>
    <property name="name" value="张三"></property>
    <property name="age" value="23"></property>
    <property name="sex" value="男"></property>
    </bean>



