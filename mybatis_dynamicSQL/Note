MyBatis动态sql
    是一种根据特定条件动态拼装SQL语句的功能，它存在的意义是为了解决 拼接SQL语句字符串时的痛点问题。
MyBatis动态sql(if标签)
    if标签可通过test属性的表达式进行判断，若表达式的结果为true，则标签中的内容会执行；
    反之标签中的内容不会执行。
    <select id="getEmpByCondition" resultType="Emp">
        SELECT emp_id, emp_name, age, gender FROM t_emp WHERE 1=1
        <if test="empName != null and empName != ''">
            emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            AND age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            AND gender = #{gender}
        </if>
    </select>
MyBatis动态sql(where标签)
    where和if一般结合使用：
    a>若where标签中的if条件都不满足，则where标签没有任何功能，即不会添加where关键字
    b>若where标签中的if条件满足，则where标签会自动添加where关键字，并将条件最前方多余的and去掉
    注意：where标签不能去掉条件最后多余的and
    <select id="getEmpByCondition" resultType="Emp">
            SELECT emp_id, emp_name, age, gender FROM t_emp
            <where>
                <if test="empName != null and empName != ''">
                    emp_name = #{empName}
                </if>
                <if test="age != null and age != ''">
                    AND age = #{age}
                </if>
                <if test="gender != null and gender != ''">
                    AND gender = #{gender}
                </if>
            </where>
    </select>
MyBatis动态sql(trim标签)
    trim用于去掉或添加标签中的内容
    常用属性：
    prefix：在trim标签中的内容的前面添加某些内容
    prefixOverrides：在trim标签中的内容的前面去掉某些内容
    suffix：在trim标签中的内容的后面添加某些内容
    suffixOverrides：在trim标签中的内容的后面去掉某些内容
    <select id="getEmpByCondition" resultType="Emp">
            SELECT emp_id, emp_name, age, gender FROM t_emp
            <trim prefix="WHERE" suffixOverrides="AND">
                <if test="empName != null and empName != ''">
                    emp_name = #{empName} AND
                </if>
                <if test="age != null and age != ''">
                    age = #{age} AND
                </if>
                <if test="gender != null and gender != ''">
                    gender = #{gender}
                </if>
            </trim>
    </select>
MyBatis动态sql(choose、when、otherwise不常用)
    choose、when、 otherwise相当于if...else if..else
MyBatis动态sql(foreach标签)
    1.批量添加
    属性：collection：mapper接口方法传入的集合或数组名称
          item：集合或数组中数据名称
          separator：循环之间的分隔符
          open：循环以什么开始
          close：循环以什么结束
    <insert id="insertBatchEmp">
            INSERT INTO t_emp (emp_id, emp_name, age, gender, dept_id)  VALUES
            <foreach collection="emps" item="emp" separator=",">
                (null, #{emp.empName}, #{emp.age}, #{emp.gender}, null )
            </foreach>
    </insert>
    2.批量删除
    <!--void deleteBatchEmp(@Param("empIds") Integer[] empIds);-->
        <delete id="deleteBatchEmp1">
            DELETE FROM t_emp WHERE emp_id IN
            (
                <foreach collection="empIds" item="empId" separator=",">
                    #{empId}
                </foreach>
            )
        </delete>
        <!--void deleteBatchEmp(@Param("empIds") Integer[] empIds);-->
        <delete id="deleteBatchEmp2">
            DELETE FROM t_emp WHERE emp_id IN
            <foreach collection="empIds" item="empId" separator="," open="(" close=")">
                #{empId}
            </foreach>
        </delete>
        <!--void deleteBatchEmp(@Param("empIds") Integer[] empIds);-->
        <delete id="deleteBatchEmp">
            DELETE FROM t_emp WHERE
            <foreach collection="empIds" item="empId" separator="OR">
                emp_id = #{empId}
            </foreach>
        </delete>
MyBatis动态sql(sql标签)
    sql片段，可以记录一段公共sql片段，在使用的地方通过include标签进行引入
     <sql id="empColumns">
            emp_id, emp_name, age, gender
     </sql>
     <select>
        SELECT <include refid="empColumns"></include> FROM t_emp
            <trim prefix="WHERE" suffixOverrides="AND">
                <if test="empName != null and empName != ''">
                    emp_name = #{empName} AND
                </if>
                <if test="age != null and age != ''">
                    age = #{age} AND
                </if>
                <if test="gender != null and gender != ''">
                    gender = #{gender}
                </if>
            </trim>
     </select>
