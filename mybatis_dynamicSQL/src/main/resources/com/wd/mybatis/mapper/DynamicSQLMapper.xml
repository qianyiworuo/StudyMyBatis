<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wd.mybatis.mapper.DynamicSQLMapper">
    <sql id="empColumns">
        emp_id, emp_name, age, gender
    </sql>
    <!--ist<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByCondition1" resultType="Emp">
        SELECT <include refid="empColumns"></include> FROM t_emp WHERE 1=1
        <if test="empName != null and empName != ''">
            emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            AND age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            AND gender = #{gender}
        </if>
    </select>
    <select id="getEmpByCondition2" resultType="Emp">
        SELECT emp_id, emp_name, age, gender FROM t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                AND age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                AND gender = #{gender}
            </if>
        </where>
    </select>
    <select id="getEmpByCondition" resultType="Emp">
        SELECT <include refid="empColumns"></include> FROM t_emp
        <trim prefix="WHERE" suffixOverrides="AND">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} AND
            </if>
            <if test="age != null and age != ''">
                age = #{age} AND
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender}
            </if>
        </trim>
    </select>
<!--void insertBatchEmp(@Param("emps") List<Emp> emps);-->
    <insert id="insertBatchEmp">
        INSERT INTO t_emp (emp_id, emp_name, age, gender, email)  VALUES
        <foreach collection="emps" item="emp" separator=",">
            (null, #{emp.empName}, #{emp.age}, #{emp.gender}, null )
        </foreach>
    </insert>
<!--void deleteBatchEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteBatchEmp1">
        DELETE FROM t_emp WHERE emp_id IN
        (
            <foreach collection="empIds" item="empId" separator=",">
                #{empId}
            </foreach>
        )
    </delete>
    <!--void deleteBatchEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteBatchEmp2">
        DELETE FROM t_emp WHERE emp_id IN
        <foreach collection="empIds" item="empId" separator="," open="(" close=")">
            #{empId}
        </foreach>
    </delete>
    <!--void deleteBatchEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteBatchEmp">
        DELETE FROM t_emp WHERE
        <foreach collection="empIds" item="empId" separator="OR">
            emp_id = #{empId}
        </foreach>
    </delete>
</mapper>