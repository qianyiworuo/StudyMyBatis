IOC容器在Spring中的实现
    ①BeanFactory
    这是 IOC 容器的基本实现，是 Spring 内部使用的接口。面向 Spring 本身，不提供给开发人员使
    ②ApplicationContext
    BeanFactory 的子接口，提供了更多高级特性。面向 Spring 的使用者，几乎所有场合都使用
    ApplicationContext 而不是底层的 BeanFactory。
    ③ApplicationContext的主要实现类
    ConfigurableApplicationContext接口下AbstractApplicationContext抽象类下的AbstractRefreshableApplicationContext
    子抽象类下的AbstractRefreshableConfigApplicationContext子抽象类AbstractXmlApplicationContext下的
    FileSystemXmlApplicationContext和ClassPathXmlApplicationContext类。
    其中ClassPathXmlApplicationContext类常用
                类型名                                     简介
    ClassPathXmlApplicationContext    通过读取类路径下的 XML 格式的配置文件创建 IOC 容器对象
    FileSystemXmlApplicationContext   通过文件系统路径读取 XML 格式的配置文件创建 IOC 容器对象
    ConfigurableApplicationContext    ApplicationContext 的子接口，包含一些扩展方法refresh() 和 close() ，让 ApplicationContext 具有启动、关闭和刷新上下文的能力。
    WebApplicationContext             专门为 Web 应用准备，基于 Web 环境创建 IOC 容器对象，并将对象引入存入 ServletContext 域中。
基于XML管理bean
    <!--
    配置HelloWorld所对应的bean，即将HelloWorld的对象交给Spring的IOC容器管理
    通过bean标签配置IOC容器所管理的bean
    属性：
    id：设置bean的唯一标识
    class：设置bean所对应类型的全类名
    -->
    <bean id="helloworld" class="com.atguigu.spring.bean.HelloWorld"></bean>

