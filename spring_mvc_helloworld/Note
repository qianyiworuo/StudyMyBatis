SpringMVC配置
    web.xml
        <!--配置SpringMVC的前端控制器DispatcherServlet
            SpringMVC的配置文件默认位置和名称：
            位置：WEB-INF下
            名称：<servlet-name>-servlet.xml，当前配置下的文件名为SpringMVC-servlet.xml
        -->
            <servlet>
                <servlet-name>SpringMVC</servlet-name>
                <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--设置SpringMVC配置文件的位置和名称-->
                <init-param>
                    <param-name>contextConfigLocation</param-name>
                    <param-value>classpath:springmvc.xml</param-value>
                </init-param>
        <!--服务器开启时就进行DispatcherServlet前端控制器初始化-->
                <load-on-startup>1</load-on-startup>
            </servlet>


        <!--url-pattern中/和/*的区别
            /：匹配浏览器向服务器发送的所有请求(不包括.jsp)
            /*：匹配浏览器向服务器发送的所有请求(包括.jsp)
        -->
            <servlet-mapping>
                <servlet-name>SpringMVC</servlet-name>
                <url-pattern>/</url-pattern>
            </servlet-mapping>
    springmvc.xml
        resource路径下
            <!-- 自动扫描包 -->
                <context:component-scan base-package="com.wd.controller"></context:component-scan>
                <!-- 配置Thymeleaf视图解析器 -->
                <bean id="viewResolver"
                      class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
                    <property name="order" value="1"/>
                    <property name="characterEncoding" value="UTF-8"/>
                    <property name="templateEngine">
                        <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                            <property name="templateResolver">
                                <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                                    <!-- 视图前缀 -->
                                    <property name="prefix" value="/WEB-INF/templates/"/>
                                    <!-- 视图后缀 -->
                                    <property name="suffix" value=".html"/>
                                    <property name="templateMode" value="HTML5"/>
                                    <property name="characterEncoding" value="UTF-8" />
                                </bean>
                            </property>
                        </bean>
                    </property>
                </bean>
    controller控制层
        接收前端请求
        // @RequestMapping注解：处理请求和控制器方法之间的映射关系
        // @RequestMapping注解的value属性可以通过请求地址匹配请求，/表示的当前工程的上下文路径
        // localhost:8080/
            @RequestMapping("/")
                public String protal(){
                    //讲逻辑视图返回
                    return"index";
                }
    xxx.html
          <a th:href="@{/test}">测试Thymeleaf--->SpringMVC</a>
          thymeleaf渲染，th:href="@{/test}"请求路径。
    总结
        浏览器发送请求，若请求地址符合前端控制器的url-pattern，该请求就会被前端控制器
        DispatcherServlet处理。前端控制器会读取SpringMVC的核心配置文件，通过扫描组件找到控制器，
        将请求地址和控制器中@RequestMapping注解的value属性值进行匹配，若匹配成功，该注解所标识的
        控制器方法就是处理请求的方法。处理请求的方法需要返回一个字符串类型的视图名称，该视图名称会
        被视图解析器解析，加上前缀和后缀组成视图的路径，通过Thymeleaf对视图进行渲染，最终转发到视
        图所对应页面。
